apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-06-07T10:31:24Z"
    generateName: webapp-754bcc647d-
    labels:
      app: webapp
      pod-template-hash: 754bcc647d
    name: webapp-754bcc647d-tbgwl
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webapp-754bcc647d
      uid: b60af23d-a928-4746-ba83-f249dc2b5f43
    resourceVersion: "178741"
    uid: b52b0637-3c67-4caa-8dbe-1e6945b93335
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2zhp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3d-mycluster-server-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-j2zhp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T10:31:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T10:31:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T10:31:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T10:31:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://18065e328c6df9a211e0eb18edbb9a27ababef157248a04ab4ddd6fb3880ccc9
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:af296b188c7b7df99ba960ca614439c99cb7cf252ed7bbc23e90cfda59092305
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-06-07T10:31:26Z"
    hostIP: 172.19.0.7
    phase: Running
    podIP: 10.42.0.158
    podIPs:
    - ip: 10.42.0.158
    qosClass: BestEffort
    startTime: "2023-06-07T10:31:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-06-07T11:06:17Z"
    generateName: webapp-754bcc647d-
    labels:
      app: webapp
      pod-template-hash: 754bcc647d
    name: webapp-754bcc647d-dlrlq
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webapp-754bcc647d
      uid: b60af23d-a928-4746-ba83-f249dc2b5f43
    resourceVersion: "180156"
    uid: ff0d98d1-ba53-46a0-95cf-8f7292e6c2c0
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qgtcw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3d-mycluster-server-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-qgtcw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://beab3ec4d880ab9210752ea2df9bee4eb4687e3a6a65fa7aca8ed8da6ea1b206
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:af296b188c7b7df99ba960ca614439c99cb7cf252ed7bbc23e90cfda59092305
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-06-07T11:06:19Z"
    hostIP: 172.19.0.7
    phase: Running
    podIP: 10.42.0.185
    podIPs:
    - ip: 10.42.0.185
    qosClass: BestEffort
    startTime: "2023-06-07T11:06:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-06-07T11:06:17Z"
    generateName: webapp-754bcc647d-
    labels:
      app: webapp
      pod-template-hash: 754bcc647d
    name: webapp-754bcc647d-qvk94
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webapp-754bcc647d
      uid: b60af23d-a928-4746-ba83-f249dc2b5f43
    resourceVersion: "180158"
    uid: 6296e534-2b9d-4c89-92ec-088fd017b80f
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rmqqq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3d-mycluster-server-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rmqqq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://69d87c430ee2a2aa1f3c543a957685062406eb9021c6875093714f2dc49d5ddd
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:af296b188c7b7df99ba960ca614439c99cb7cf252ed7bbc23e90cfda59092305
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-06-07T11:06:19Z"
    hostIP: 172.19.0.7
    phase: Running
    podIP: 10.42.0.184
    podIPs:
    - ip: 10.42.0.184
    qosClass: BestEffort
    startTime: "2023-06-07T11:06:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-06-07T11:06:17Z"
    generateName: webapp-754bcc647d-
    labels:
      app: webapp
      pod-template-hash: 754bcc647d
    name: webapp-754bcc647d-2bt4d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webapp-754bcc647d
      uid: b60af23d-a928-4746-ba83-f249dc2b5f43
    resourceVersion: "180162"
    uid: 08580ee8-5889-4585-9874-e3d5aa828b61
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2kq5k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3d-mycluster-server-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-2kq5k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b92dd7d4bce75ada8a5d2832b35312122ae43176e407e8a9f09e19765c314b45
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:af296b188c7b7df99ba960ca614439c99cb7cf252ed7bbc23e90cfda59092305
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-06-07T11:06:19Z"
    hostIP: 172.19.0.7
    phase: Running
    podIP: 10.42.0.187
    podIPs:
    - ip: 10.42.0.187
    qosClass: BestEffort
    startTime: "2023-06-07T11:06:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-06-07T11:06:17Z"
    generateName: webapp-754bcc647d-
    labels:
      app: webapp
      pod-template-hash: 754bcc647d
    name: webapp-754bcc647d-vbfw9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webapp-754bcc647d
      uid: b60af23d-a928-4746-ba83-f249dc2b5f43
    resourceVersion: "180166"
    uid: 9977b4f0-818b-497f-98fd-bb24f25bf833
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6hw7m
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3d-mycluster-server-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6hw7m
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-06-07T11:06:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2318e08745f14f4e893f641c4ea74cfedcbace7a57c8e89ff9108aa1ae391b1a
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:af296b188c7b7df99ba960ca614439c99cb7cf252ed7bbc23e90cfda59092305
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-06-07T11:06:19Z"
    hostIP: 172.19.0.7
    phase: Running
    podIP: 10.42.0.186
    podIPs:
    - ip: 10.42.0.186
    qosClass: BestEffort
    startTime: "2023-06-07T11:06:17Z"
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "7"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-06-07T10:31:23Z"
    generation: 8
    labels:
      app: webapp
      pod-template-hash: 754bcc647d
    name: webapp-754bcc647d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: webapp
      uid: 7857cf3a-5cf2-49ae-a320-3cf94732e69f
    resourceVersion: "180167"
    uid: b60af23d-a928-4746-ba83-f249dc2b5f43
  spec:
    replicas: 5
    selector:
      matchLabels:
        app: webapp
        pod-template-hash: 754bcc647d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: webapp
          pod-template-hash: 754bcc647d
      spec:
        containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    fullyLabeledReplicas: 5
    observedGeneration: 8
    readyReplicas: 5
    replicas: 5
kind: List
metadata:
  resourceVersion: ""
